import numpy as np
import synmorph.tri_functions as trf


"""
Algorithm 

Initialise tri to 0 
Set all cells of given cluster to 1
(tri + roll(tri))!=0 --> 1, repeatedly. 
Register where (tri!=0). If enter a new cluster, save the roll index
Terminate when all clusters are recorded. 
"""

tri = np.array([[ 0, 70,  1],
       [ 0,  1,  2],
       [ 1,  3,  2],
       [ 1,  5,  3],
       [ 1, 70,  4],
       [ 1,  4,  5],
       [ 4,  9,  5],
       [ 2,  3,  6],
       [ 3,  8,  6],
       [ 3,  5,  7],
       [ 5, 11,  7],
       [ 3,  7,  8],
       [ 7, 13,  8],
       [ 4, 68,  9],
       [ 7, 11, 10],
       [ 5,  9, 11],
       [ 9, 16, 11],
       [ 6,  8, 12],
       [ 8, 18, 12],
       [ 7, 10, 13],
       [10, 19, 13],
       [10, 11, 14],
       [11, 16, 14],
       [ 9, 68, 15],
       [ 9, 15, 16],
       [15, 25, 16],
       [10, 14, 17],
       [14, 26, 17],
       [ 8, 13, 18],
       [13, 20, 18],
       [10, 17, 19],
       [17, 21, 19],
       [13, 19, 20],
       [19, 27, 20],
       [17, 23, 21],
       [12, 18, 22],
       [18, 29, 22],
       [17, 26, 23],
       [14, 16, 24],
       [16, 25, 24],
       [15, 71, 25],
       [14, 24, 26],
       [24, 33, 26],
       [19, 21, 27],
       [21, 31, 27],
       [21, 23, 28],
       [23, 38, 28],
       [18, 20, 29],
       [20, 32, 29],
       [22, 29, 30],
       [29, 39, 30],
       [21, 28, 31],
       [28, 40, 31],
       [20, 27, 32],
       [27, 41, 32],
       [24, 34, 33],
       [24, 25, 34],
       [25, 37, 34],
       [23, 26, 35],
       [26, 33, 35],
       [33, 48, 35],
       [28, 38, 36],
       [25, 71, 37],
       [23, 35, 38],
       [35, 47, 38],
       [29, 32, 39],
       [32, 44, 39],
       [28, 36, 40],
       [36, 42, 40],
       [27, 31, 41],
       [31, 43, 41],
       [36, 46, 42],
       [31, 40, 43],
       [40, 55, 43],
       [32, 41, 44],
       [41, 52, 44],
       [30, 39, 45],
       [39, 53, 45],
       [36, 50, 46],
       [35, 48, 47],
       [33, 49, 48],
       [33, 34, 49],
       [34, 51, 49],
       [36, 38, 50],
       [38, 47, 50],
       [47, 61, 50],
       [34, 37, 51],
       [37, 69, 51],
       [41, 43, 52],
       [43, 65, 52],
       [39, 44, 53],
       [44, 67, 53],
       [42, 46, 54],
       [46, 60, 54],
       [40, 42, 55],
       [42, 63, 55],
       [49, 51, 56],
       [51, 59, 56],
       [47, 48, 57],
       [48, 62, 57],
       [46, 50, 58],
       [50, 61, 58],
       [51, 69, 59],
       [46, 58, 60],
       [58, 77, 60],
       [47, 57, 61],
       [57, 74, 61],
       [48, 49, 62],
       [49, 56, 62],
       [56, 78, 62],
       [42, 54, 63],
       [54, 69, 63],
       [37, 71, 63],
       [54, 60, 64],
       [59, 69, 64],
       [60, 73, 64],
       [43, 55, 65],
       [15, 68, 65],
       [55, 71, 65],
       [45, 53, 66],
       [53, 70, 66],
       [44, 52, 67],
       [52, 68, 67],
       [ 4, 70, 67],
       [52, 65, 68],
       [ 4, 67, 68],
       [37, 63, 69],
       [54, 64, 69],
       [53, 67, 70],
       [ 0, 80, 70],
       [55, 63, 71],
       [15, 65, 71],
       [22, 30, 72],
       [58, 61, 72],
       [61, 74, 72],
       [30, 77, 72],
       [45, 66, 73],
       [60, 77, 73],
       [66, 79, 73],
       [12, 22, 74],
       [22, 72, 74],
       [57, 76, 74],
       [ 0,  2, 75],
       [56, 59, 75],
       [ 2, 78, 75],
       [59, 79, 75],
       [ 6, 12, 76],
       [57, 62, 76],
       [12, 74, 76],
       [62, 78, 76],
       [30, 45, 77],
       [58, 72, 77],
       [45, 73, 77],
       [ 2,  6, 78],
       [56, 75, 78],
       [ 6, 76, 78],
       [59, 64, 79],
       [64, 73, 79],
       [ 0, 75, 79],
       [66, 80, 79],
       [66, 70, 80],
       [ 0, 79, 80]],dtype=np.int32)

c_types = np.array([0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0,
       1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0,
       1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0,
       0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0], dtype=np.int32)



c_tri = trf.tri_call_int(c_types,tri)